#sum

declare
a integer:=&a;
b integer:=&b;
c integer;
begin
c:=a+b; 
dbms_output.put_line('the sum is ' || c);
end;
/

#factorial

#USING FOR LOOP
declare
n integer:=&n;
i integer;
f integer:=1;
begin
for i in 1 ..n loop
f:=i*f;
n:=n-1;
end loop;
dbms_output.put_line(f);
end;
/


#USING WHILE LOOP

declare
fac number :=1;
n number := &1;
begin			
while n > 0 loop
fac:=n*fac;		
n:=n-1;		
end loop;		
dbms_output.put_line(fac);
end;
/		

#

begin
dbms_output.put_line('HELLO WORLD');
end;
/	


#PRIME NUMBER

declare
n number:=&n;			
i number;			
temp number;			
begin				
i := 2;
temp := 1;
for i in 2..n/2 loop
if mod(n, i) = 0
then
temp := 0;
exit;
end if;
end loop;
if temp = 1
then
dbms_output.put_line('prime number');
else
dbms_output.put_line('not prime');
end if;
end;
/


CREATE OR REPLACE FUNCTION FUN(A
NUMBER) RETURN NUMBER IS

BEGIN

RETURN (A*A);

END FUN;

/
SQL> select fun(5) from dual;

    FUN(5)
----------
        25



select sysdate from dual;

SQL> select sysdate from dual;

SYSDATE
---------
19-JUN-23


=> Function to return the sum of two integers.

create or replace function addition(a number,b number) return number is
begin
return (a+b);
end addition;
/

SQL> create or replace function addition(a number,b number) return number is
  2  begin
  3  return (a+b);
  4  end addition;
  5  /

Function created.

SQL> select addition(2,3) from dual;

ADDITION(2,3)
-------------
            5


#

declare
a integer:=&a;
b integer:=&b;
c integer;
begin
c:=addition(a,b);
dbms_output.put_line('the sum is ' || c);
end;
/

###

create or replace function rate(id number) return number is
r number;
begin
select rating into r from sailors where sid=id;
return(r);
end rate;

Function created.

declare 
id number;
r number;
begin
id:=&id;
r:=rate(id);
dbms_output.put_line('Result:'||r);
end;

=>
Enter value for id: 22
old   5: id:=&id;
new   5: id:=22;
Result:7

PL/SQL procedure successfully completed.

###

create or replace function mydate(n number) return varchar is
begin
if (n=1)then
return('sunday');
elsif (n=2)then
return('monday');
elsif (n=3)then
return('tuesday');
elsif (n=4)then
return('wednesday');
elsif (n=5)then
return('thursday');
elsif (n=6)then
return('friday');
elsif (n=7)then
return('saturday');
end if;
end mydate;


declare
b number;
d varchar(12);
begin
b:=&b;
d:=mydate(b);
dbms_output.put_line('Day : ' ||d);
end;

###

DECLARE
A INTEGER:=&A; 
B INTEGER:=&B; 
C INTEGER; 
BEGIN IF
(B=0)THEN
RAISE_APPLICATION_ERROR(-20001,'DIVISION BY ZERO'); 
ELSE
C:=A/B;
DBMS_OUTPUT.PUT_LINE('RESULT IS :'||C); 
END IF;
END;
/

###

DECLARE 
n number(5); 
BEGIN 
UPDATE sailors SET rating= rating+ 1;
IF SQL%NOTFOUND THEN 
dbms_output.put_line('No rating are updated'); 
ELSIF SQL%FOUND THEN 
n := SQL%ROWCOUNT;
dbms_output.put_line('Rating for ' || n || ' sailors are updated'); 
END IF;
END;
/ 